{"code":"const { x, o, dom } = $\n\nconst header = await x.p('addHeader', { dom })\n\nawait x.p('objectName', { target: header, o })\nawait x.p('codeShowCtrl', {\n    in: { objectDom: dom, target: header, o }\n})\n\nconst ulid = (await import(location.href + '/module/ulid.js')).default\n\nconst btn = document.createElement('span')\nheader.append(btn)\nbtn.className = 'btn'\nbtn.style.marginLeft = '5px'\nbtn.innerText = 'add object'\nbtn.style.fontFamily = 'Roboto, sans-serif'\nbtn.addEventListener('click', async () => {\n    const o = {\n        id: ulid(),\n        code: `\nconst { x, o, dom } = $\nawait x.p('stdObjectControls', { target: dom, o })\n`,\n    }\n    const app = document.getElementById('app')\n    await x.p('renderObject', { target: app, object: o })\n})\n\n//right click show context menu\n\nreturn\n\n  const selfId = document.currentScript.getAttribute('self-id')\n  const self = document.getElementById(selfId)\n\n  const props = self.getElementsByClassName('props')\n  if (props.length > 0) {\n      console.log(props)\n  }\n\n  self.addEventListener('getProps', (e) => {\n    console.log('getProps');\n  });\n\n  const view = document.createElement('div')\n  view.className = 'view'\n  self.append(view)\n\n  const target = document.createElement('input')\n  target.className = 'targetInput'\n  view.append(target)\n\n  //const btn = document.createElement('div')\n  //btn.innerText = 'trigger'\n  //btn.style.border = '1px solid'\n  //btn.style.width = 'fit-content'\n  //btn.style.cursor = 'pointer'\n  //btn.addEventListener('click', (e) => {\n  //    const data = { name: 'cat' }\n  //    const event = new CustomEvent('trigger', { detail: data});\n\n//      const el = document.getElementById(target.value)\n//      if (!el) return;\n //     el.dispatchEvent(event);\n // })\n\n  view.append(btn)\n\n","id":"01JAB79NZ7NNB6C5H299R50D18","name":"addObject","showCode":true}