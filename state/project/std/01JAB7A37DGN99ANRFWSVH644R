{"code":"const { x, o, dom  } = $\n\nconst header = await x.p('addHeader', { dom })\n\nawait x.p('objectName', { target: header, o })\nawait x.p('codeShowCtrl', {\n    in: { blockDom: dom, target: header, state: o }\n})\n\n//todo block//\n\n//todo add, remove, stdObjectControls, select, mover, copy, auth, signin, signup, signout\n\n//dataEditor + codeEditor\n//project loader block\n\n//ability to hide show code\n\n//store font and blocks in indexed db\n\n//for reorder need custom script, for access field via x.api() app blocks\n\n//todo переделать на base64 загрузку файлов\n\n//todo show names of blocks or just show some icon of block (minecraft)\n\n//implement send messages to future blocks\n//the same future message can be sended to not inited script blocks\n//todo editor for styles\n//todo elements can be loaded on backend\n//todo defence agains destroy element with div.prepend(block)\n\n\nconst head = document.getElementsByTagName('head')[0]\n\nconst darkTheme = `\nbody {\n    background: #3d3d3d;\n}\n`\nconst lightTheme = `\nbody {\n    background: #CBD2A4;\n    color: #8afd8a;\n}\n`\n\nlet style = document.createElement('style')\nstyle.innerHTML = `\n\n:root {\n  --green-color: #8afd8a;\n}\n\nhtml {\n  font-size: 100%;\n  text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  -moz-text-size-adjust: 100%;\n}\nbody {\n    font-variant-ligatures: none;\n    background: #3d3d3d;\n    font-size: 1rem;\n    color: var(--green-color);\n}\n.object {\n    display: inline-block;\n    vertical-align: top;\n    margin: 3px;\n    padding: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1), \n              0 6px 20px rgba(0, 0, 0, 0.1);\n    transition: box-shadow 0.3s ease;\n    background: rgb(80 80 80);\n}\n.object-name {\n    color: var(--green-color);\n    font-size: 1.07rem;\n    margin-bottom: 10px;\n    font-family: 'Roboto', sans-serif;\n}\n.object-code {\n    margin: 0;\n    padding-top: 0.5rem;\n    font-size: 0.85rem;\n    outline: none;\n    font-family: 'JetBrains Mono', monospace;\n    font-weight: normal;\n    font-style: normal;\n    font-variant-ligatures: none;\n}\n.btn {\n    padding: 1px 2px;\n    font-family: monospace;\n    font-size: 0.9rem;\n    border: 2px solid var(--green-color);\n    border-radius: 4px;\n}\n.btn:hover {\n    background: var(--green-color);\n    color: black;\n    border: 2px solid var(--green-color);\n    cursor: pointer;\n}\n.hidden { display:none; }\n`\n\nhead.append(style)\n\nconst url = `https://fonts.googleapis.com/css2?family=`\nconst jetBrainsMonoUrl = `${url}JetBrains+Mono:wght@100..800&display=swap`\nconst robotoUrl = `${url}Roboto:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap`\n\nstyle = document.createElement('style')\nstyle.innerHTML = `\n  @import url(${robotoUrl});\n  @import url(${jetBrainsMonoUrl});\n`\nhead.append(style)\n\nreturn\nconst block = await x.p('getBlockDomById', { id: blockDomId })\n\nblock.prepend(br)\nblock.prepend(input)\n\ninput.addEventListener('change', event => {\n  const file = event.target.files[0]\n  if (!file) return\n    const reader = new FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onload = async () => {\n      const arrBuf = reader.result\n      const data = { bin: reader.result, binMeta: { name: file.name } }\n      await x.p('set', data)\n    }\n})","id":"01JAB7A37DGN99ANRFWSVH644R","name":"todo and style block","showCode":true}